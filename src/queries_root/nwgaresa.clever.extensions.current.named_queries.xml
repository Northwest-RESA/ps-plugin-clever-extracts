<queries>

	<query name="nwgaresa.clever.extensions.current" flattened="true">
	<description>Program extensions file for Clever.</description>
	<columns>
		<column column="STUDENTS.DCID">dcid</column>
		<column column="STUDENTS.ID">id</column>
		<column column="STUDENTS.STUDENT_NUMBER">student_number</column>
		<column column="STUDENTS.STATE_STUDENTNUMBER">state_studentnumber</column>
		<column column="STUDENTS.LAST_NAME">last_name</column>
		<column column="STUDENTS.FIRST_NAME">first_name</column>
		<column column="STUDENTS.MIDDLE_NAME">middle_name</column>
		<column column="STUDENTS.LASTFIRST">lastfirst</column>
		<column column="STUDENTS.ENTRYDATE">entrydate</column>
		<column column="STUDENTS.EXITDATE">exitdate</column>
		<column column="STUDENTS.GRADE_LEVEL">grade_level</column>
		<column column="STUDENTS.SCHOOLID">schoolid</column>
		<column column="STUDENTS.LUNCHSTATUS">lunchstatus</column>
		<column column="STUDENTS.STATE_EXCLUDEFROMREPORTING">state_excludefromreporting</column>
		<column column="STUDENTS.ID">section_504</column>
		<column column="STUDENTS.ID">special_education</column>
		<column column="STUDENTS.ID">talented_gifted</column>
		<column column="STUDENTS.ID">frl</column>
		<column column="STUDENTS.ID">ell</column>
		

	</columns>
	<sql>
		<![CDATA[

			with curyear as (
				select t.id
					, t.lastday
					, t.firstday
				from terms t 
					join current_yearids c on t.id between c.yearid_low and c.yearid_high
					join prefs 
						on t.id between to_number(to_char(prefs.value) || '00') and to_number(to_char(prefs.value) || '99')
						and lower(prefs.name) = 'coursearchiveyear'
				where 1=1
					and t.schoolid = 0 
					and t.isyearrec = 1
			)

			, curstu as (
				select stu.dcid, stu.id, stu.student_number, stu.state_studentnumber
					, stu.last_name, stu.first_name, stu.middle_name
					, stu.lastfirst
					, stu.entrydate, stu.exitdate
					, stu.grade_level
					, stu.schoolid
					, stu.lunchstatus
					, stu.state_excludefromreporting
				from students stu
					join (select * from curyear) cy on stu.entrydate between cy.firstday and cy.lastday
			)

			, gifted as (
				-- students that are currenty gifted
				select distinct g.studentsdcid   
				from s_ga_stu_gifted_c g
					join (select * from curyear) cy on coalesce(g.exitdate, sysdate) between cy.firstday and cy.lastday
				where 1=1
					and g.giftedprogram = 1 -- Enrolled
					and g.servicecode = 1 -- Served this year 2 = not served this year
			)

			, esol as (
				-- students that are currently el
				select distinct el.studentsdcid 
				from s_ga_stu_esol_c el
					join (select * from curyear) cy on coalesce(el.exitdate, sysdate) between cy.firstday and cy.lastday
				where 1=1
					and el.isesol = 1
					and upper(el.elflag) = 'Y' -- Y, F, M, [null]
			)

			, sped as (
				-- use s_ga_ren_speced_x for historical data (not needed for this query since we are assuming current year)
				select distinct sped.studentsdcid
				from s_ga_stu_speced_x sped
					join (select * from curyear) cy on coalesce(sped.exitdate, sysdate) between cy.firstday and cy.lastday
				where 1=1
					and upper(sped.all_iep) = 'Y'  -- excluding Service plan only students
			)

			, sec504 as (
				-- students marked 504 during the current year
				select distinct s504.studentsdcid 
				from s_ga_stu_504_c s504
					join (select * from curyear) cy on coalesce(s504.enrollmentdate, sysdate) between cy.firstday and cy.lastday
				where 1=1
					and s504.is504 = 1
			)

			select curstu.dcid
				, curstu.id
				, curstu.student_number
				, curstu.state_studentnumber
				
				, curstu.last_name
				, curstu.first_name
				, curstu.middle_name
				, curstu.lastfirst
				
				, curstu.entrydate
				, curstu.exitdate
				
				, curstu.grade_level
				, curstu.schoolid
				, curstu.lunchstatus
				, curstu.state_excludefromreporting

				, case when sec504.studentsdcid is not null then 'Section 504' end section_504
				, case when sped.studentsdcid is not null then 'Special Education (SPED)' end special_education
				, case when gifted.studentsdcid is not null then 'Talented and Gifted (TAG)' end talented_gifted
				, case when upper(cur_stu.lunchstatus) in ('F', 'R') then 'Free and Reduced Lunch (FRL)' end frl
				, case when esol.studentsdcid is not null then 'English Language Learner (ELL)' end ell
			from (select * from curstu) curstu
			    left join (select * from gifted) gifted on cur_stu.dcid = gifted.studentsdcid
				left join (select * from esol) esol on cur_stu.dcid = esol.studentsdcid
				left join (select * from sped) sped on cur_stu.dcid = sped.studentsdcid
				left join (select * from sec504) sec504 on cur_stu.dcid = sec504.studentsdcid
			order by curstu.dcid

		]]>
	</sql>
	</query>

</queries>